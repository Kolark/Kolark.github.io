{"pageProps":{"page":{"previous":"v","next":"x","letter":"w","vertex":"#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float time;\n\n#define PI 3.14159265359\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\n\nvarying float vVal;\nvoid main() {\n    vUv = uv;\n\n    vec3 newPos = position;\n    float b = sinTMap(2.5,-80.,30.);\n    vec2 defaultVec = vec2(0.,-75.);\n    vec2 diff = defaultVec - newPos.yz;\n    // move space from the center to the vec2(0.0)\n    newPos.yz -= defaultVec;\n    // rotate the space\n    //*sin(newPos.x*0.005 + time)\n    float val = pow((sin(newPos.x*0.009 + time*2.5)+1.0)*0.5,6.0);\n    vVal = val;\n    newPos.yz = rotate2d(PI*0.7*val)*newPos.yz;\n    // move it back to the original place\n    newPos.yz += defaultVec;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPos, 1.0 );\n}","frag":"#define GLSLIFY 1\nuniform float time;\nvarying vec2 vUv;\nvarying float vVal;\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\n#define PI 3.14159265359\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main() {\n    vec2 newUv = vUv;\n    vec3 colorA = vec3(sin(newUv.x*PI),cos(newUv.x*PI),(newUv.x+newUv.y)*0.5);\n    float m = sinTMap(2.5,10.,25.);\n    colorA = round(colorA*m)/m;\n    vec3 colorHSB = rgb2hsb(colorA);\n    colorHSB.r += 0.3;\n    vec3 colorB = hsb2rgb(colorHSB);\n    gl_FragColor = vec4(mix(colorA,colorB,vVal),1.0);\n}","model":"W_Letter.glb","positionOffset":[0,0,0],"scale":1}},"__N_SSG":true}