{"pageProps":{"page":{"previous":"y","next":"0","letter":"z","vertex":"#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float time;\nvarying float vDist;\nvoid main() {\n    vUv = uv;\n    float zPos = -70.;\n    vec3 newPos = position;\n    float dist = zPos - newPos.z;\n    float val = smoothstep(40.,50.,abs(dist));\n    newPos.y += mix(0.5,2.25,val)*15.0*sin(time*2.5);\n    vDist = val;\n    newPos.x += pow(cos(newPos.z*0.05 + time*1.5)*sin(newPos.z*0.05 + time),3.0)*15.0;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPos, 1.0 );\n}","frag":"#define GLSLIFY 1\nuniform float time;\nvarying vec2 vUv;\nvarying float vDist;\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\n\nvoid main() {\n    vec2 newUv = vUv;\n    vec3 color = vec3(1.-newUv.x,newUv.y+newUv.x,1.0);\n    vec3 colorHSB = rgb2hsb(color);\n    colorHSB.r += 0.5;\n    // colorHSB.b *= sin(round(length(newUv*5.0)));\n    vec3 colorB = hsb2rgb(colorHSB);\n    gl_FragColor = vec4(mix(color,colorB,(1.0-vDist)+sinTMap(1.5,-0.5,0.5)),1.0);\n}","model":"Z_Letter.glb","positionOffset":[0,0,0],"scale":1}},"__N_SSG":true}