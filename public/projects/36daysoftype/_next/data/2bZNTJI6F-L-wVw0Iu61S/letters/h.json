{"pageProps":{"page":{"previous":"g","next":"i","letter":"h","vertex":"#define GLSLIFY 1\nvarying vec2 vUv;\nvarying vec3 vNormal;\nuniform float time;\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\nvoid main() {\n    vUv = uv;\n\n    vec3 newPos = position;\n    newPos += normal*sin(time*2.5)*2.5;\n    vNormal = normal;\n    float a = sinTMap(1.5,0.15,0.45);\n\n    newPos.y += smoothstep(a,1.-a,sin(newPos.x*.05 - (sin(time*3.5)*2.))*cos(newPos.z*.05 + (cos(time*3.5)*2.)))*15.;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPos, 1.0 );\n}","frag":"#define GLSLIFY 1\nuniform float time;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvoid main() {\n    vec2 newUv = vUv;\n    vec3 color = abs(vNormal);\n    float l = dot(vNormal,vec3(cos(time*1.25)*sin(time*2.5),cos(time),sin(time)));\n    // color.xy *= newUv;\n    color.z = cos(newUv.x*5. + time);\n    vec3 finalColor = color*sin(l*15.);\n\n    gl_FragColor = vec4(finalColor,1.0);\n}","model":"H_Letter.glb","positionOffset":[0,0,0],"scale":1}},"__N_SSG":true}