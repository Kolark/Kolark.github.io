{"pageProps":{"page":{"previous":"j","next":"l","letter":"k","vertex":"#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float time;\nvarying float vD;\nvarying float vD2;\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\n\nvoid main() {\n    vUv = uv;\n\n    vec3 newPos = position;\n\n    vec3 diff = vec3(50.,0.,-50.) - newPos;\n    vec3 diff2 = vec3(65. + sin(time*1.5)*5.,0.,-75.) - newPos;\n    vec3 a = vec3(sin(time),0.,cos(time));\n    vec3 a2 = vec3(sin(time*2.5),0.,cos(-time*2.5));\n\n    float d = dot(normalize(diff),normalize(a));\n    float d2 = dot(normalize(diff2),normalize(a2));\n    vD = d;\n    vD2 = d2;\n\n    float b = sinTMap(2.5,0.0,1.0);\n    newPos.y += smoothstep(0.499 - b ,0.5 + b,d*d2)*15.;\n\n    vec3 finalPos = newPos;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( finalPos, 1.0 );\n}","frag":"#define GLSLIFY 1\nuniform float time;\nvarying float vD;\nvarying vec2 vUv;\nvarying float vD2;\nvoid main() {\n    vec2 newUv = vUv;\n    float f = vD*vD2;\n\n    vec3 colorA = vec3(newUv.x,newUv.y,1. - newUv.x);\n    vec3 colorB = vec3(1. - newUv.y,newUv.x ,newUv.y);\n    gl_FragColor = vec4(mix(colorA,colorB,f),1.0);\n}","model":"K_Letter.glb","positionOffset":[0,0,0],"scale":1}},"__N_SSG":true}