{"pageProps":{"page":{"previous":"f","next":"h","letter":"g","vertex":"#define GLSLIFY 1\nvarying vec2 vUv;\nvarying float vR;\nvarying float vDeg;\nvarying float vF;\nuniform float time;\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\n//(x,y) : x = r × cos( θ ) y = r × sin( θ )\n// float x = r*cos(deg)\n// float y = r*sin(deg)\n\n//r = √ ( x2 + y2 ) r= length(vecotr)\n//θ = tan-1 ( y / x ) deg = atan(y/x)\n\nvoid main() {\n    vUv = uv;\n\n    vec3 newPos = position;\n    vec2 diff = vec2(75.,-75.) - newPos.xz;\n\n    float r = length(diff);\n    float deg = atan(diff.y,diff.x);\n    float f = sin(10.*deg + time*3.);\n\n    vR = r;\n    vDeg = deg;\n    vF = f;\n\n    vec3 finalPos = newPos+vec3(0.,1.,0.)*smoothstep(0.25,0.75,f)*25.0*sinTMap(0.5,0.0,1.0);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( finalPos, 1.0 );\n}","frag":"#define GLSLIFY 1\nuniform float time;\nvarying vec2 vUv;\nvarying float vR;\nvarying float vDeg;\nvarying float vF;\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from Iñigo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main() {\n    vec2 newUv = vUv;\n    vec3 color1 = vec3(newUv.y*vR*0.05,(vF+1.0)*0.5,newUv.y);\n    vec3 color2 = rgb2hsb(color1);\n    color2.r += vDeg*0.5;\n    vec3 color3 = hsb2rgb(color2);\n    color3.r *= (sin(newUv.y)+1.)*0.5*0.75;\n\n    gl_FragColor = vec4(color3.xzy,1.0);\n}","model":"G_Letter.glb","positionOffset":[0,0,0],"scale":1}},"__N_SSG":true}