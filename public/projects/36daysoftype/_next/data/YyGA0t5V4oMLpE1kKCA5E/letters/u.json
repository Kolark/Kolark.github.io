{"pageProps":{"page":{"previous":"t","next":"v","letter":"u","vertex":"#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float time;\n#define PI 3.14159265359\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\nvarying float vRot;\nvoid main() {\n    vUv = uv;\n\n    vec3 newPos = position;\n    float b = cosTMap(1.75,0.,1.);\n    vec2 defaultVec = vec2(75.,0.);\n    vec2 diff = defaultVec - newPos.xy;\n    // move space from the center to the vec2(0.0)\n    newPos.xy -= defaultVec;\n\n    // rotate the space\n    float rotAmount = PI*sin(newPos.z*0.01 + time) + length(diff)*0.01;\n    vRot = rotAmount;\n    newPos.xy = rotate2d(rotAmount*b)*newPos.xy;\n    // move it back to the original place\n    newPos.xy += defaultVec;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPos, 1.0 );\n}","frag":"#define GLSLIFY 1\nuniform float time;\nvarying vec2 vUv;\nvarying float vRot;\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat sinT(float f){\n    return sin(time*f);\n}\nfloat sinTMap(float f,float min, float max){\n    return map(sin(time*f),-1.,1.,min,max);\n}\n\nfloat cosT(float f){\n    return cos(time*f);\n}\nfloat cosTMap(float f,float min, float max){\n    return map(cos(time*f),-1.,1.,min,max);\n}\n\nvoid main() {\n    vec2 newUv = vUv;\n    vec3 colorA = vec3(newUv.x,newUv.y,pow(mod(1.0,newUv.x*newUv.y),sinTMap(2.5,0.25,0.75)));\n    vec3 colorB = vec3(pow(mod(1.0,newUv.x*newUv.y),sinTMap(2.5,0.25,0.75)),newUv.x,newUv.y);\n    gl_FragColor = vec4(mix(colorA,colorB,vRot),1.0);\n}","model":"U_Letter.glb","positionOffset":[0,0,0],"scale":1}},"__N_SSG":true}